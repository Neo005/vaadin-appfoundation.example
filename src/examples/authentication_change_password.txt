private Layout buildPwdChangeForm() {
    FormLayout layout = new FormLayout();
    // Create a label which we can use to give feedback to the user
    final Label feedbackLabel = new Label();

    // Create input fields for passwords
    final TextField currentPassword = new TextField("Current password");
    currentPassword.setSecret(true);
    currentPassword.setNullRepresentation("");
    final TextField newPassword = new TextField("New password");
    newPassword.setSecret(true);
    newPassword.setNullRepresentation("");
    final TextField newPasswordVerified = new TextField(
            "Verify new password");
    newPasswordVerified.setSecret(true);
    newPasswordVerified.setNullRepresentation("");

    // Add the save button
    Button saveBtn = new Button("Save", new ClickListener() {

        private static final long serialVersionUID = -5577423546946890721L;

        public void buttonClick(ClickEvent event) {
            // Try to change the password when the button is clicked
            String password = (String) currentPassword.getValue();
            String newPasswordStr = (String) newPassword.getValue();
            String newPasswordStr2 = (String) newPasswordVerified
                    .getValue();

            try {
                UserUtil.changePassword(SessionHandler.get(), password,
                        newPasswordStr, newPasswordStr2);
            } catch (InvalidCredentialsException e) {
                feedbackLabel.setValue("Current password was invalid!");
                clearPwdFields();
                return;
            } catch (TooShortPasswordException e) {
                feedbackLabel
                        .setValue("New password was too short, the password "
                                + "needs to be at least "
                                + PasswordUtil.getMinPasswordLength()
                                + " characters long.");
                clearPwdFields();
                return;
            } catch (PasswordsDoNotMatchException e) {
                feedbackLabel
                        .setValue("Password verification was incorrect");
                clearPwdFields();
                return;
            } catch (PasswordRequirementException e) {
                feedbackLabel
                        .setValue("Password did not meet set requirements");
                clearPwdFields();
                return;
            }

            feedbackLabel.setValue("Password changed!");
            clearPwdFields();
        }

        private void clearPwdFields() {
            currentPassword.setValue(null);
            newPassword.setValue(null);
            newPasswordVerified.setValue(null);
        }
    });

    layout.addComponent(feedbackLabel);
    layout.addComponent(currentPassword);
    layout.addComponent(newPassword);
    layout.addComponent(newPasswordVerified);
    layout.addComponent(saveBtn);

    return layout;
}